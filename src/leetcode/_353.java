package leetcode;

import java.util.Arrays;

public class _353 {
    public static void main(String[] args) {
        _353 t = new _353();
        int[] nums = {1, 3, 6, 4, 1, 2};
        int[] nums1 = {360791132,823160936,-518833646,-860636884,869274081,-944803823,-986418355,629214890,190212413,-589544847,-881839982,130111119,527636953,-415398076,226802762,-202260006,-463170248,672050101,-753621966,-222115600,-859482645,162135707,435467219,-686612685,-535378902,-264505831,-899102675,618861348,-460413171,862835306,-708658318,-778437324,965187421,253593060,66048191,-493394332,-121263592,555309787,-960641304,533897902,71755517,-547524430,-811309015,593669984,-378637387,-702976663,-584416681,858695665,972376395,939544103,777925236,-225330431,16501338,-267841049,-229161125,688434734,378464983,-182699217,381876829,-155844446,166531371,-481920304,115643832,663623285,841661098,-688367835,764623370,499115716,379023205,-278380732,-408054235,804252760,216388587,542770879,811790627,-910666424,604681355,-491320211,-749085640,63821145,-758565469,778346828,527520009,-777604893,-26942025,739991765,65181998,986220238,59584105,761337011,-549047801,783970397,727076255,521176119,-827809777,-145143516,-824487195,-817855674,-386387518,461996490,-237558385,-656318368,865254286,253455089,-605966209,641355743,-411506381,-468258435,-297849308,-20152874,43249132,702571121,374219581,-270904152,-868494895,-334705313,-754457039,-391211034,-96937037,172766431,595883076,-751934130,917599567,917890013,-548945116,239026513,-684677602,568233009,-745087593,584405264,654319930,-620295155,-64771300,858996775,-714329093,-625926528,58627162,921557339,346100374,169362650,979760963,445115814,329037887,373048336,346912598,881793064,-888897787,-665339101,303395664,-943036601,-53131817,947726512,-224998793,442233180,764954764,654599179,-814448517,-301348245,-888926059,-58995716,720781963,-298374471,-449505872,-258052,-47667472,-692942147,430016055,-297744421,934660935,118861935, 858695665,972376395,939544103,777925236,-225330431,16501338,-267841049,-229161125,688434734,378464983,-182699217,381876829,-155844446,166531371,-481920304,115643832,663623285,841661098,-688367835,764623370,499115716,379023205,-278380732,-408054235,804252760,216388587,542770879,811790627,-910666424,604681355,-491320211,-749085640,63821145,-758565469,778346828,527520009,-777604893,-26942025,739991765,65181998,986220238,59584105,761337011,-549047801,783970397,727076255,521176119,-827809777,-145143516,-824487195,-817855674,-386387518,461996490,-237558385,-656318368,865254286,253455089,-605966209,641355743,-411506381,-468258435,-297849308,-20152874,43249132,702571121,374219581,-270904152,-868494895,-334705313,-754457039,-391211034,-96937037,172766431,595883076,-751934130,917599567,917890013,-548945116,239026513,-684677602,568233009,-745087593,584405264,654319930,-620295155,-64771300,858996775,-714329093,-625926528,58627162,921557339,346100374,169362650,979760963,445115814,329037887,373048336,346912598,881793064,-888897787,-665339101,303395664,-943036601,-53131817,947726512,-224998793,442233180,764954764,654599179,-814448517,-301348245,-888926059,-58995716,720781963,-298374471,-449505872,-258052,-47667472,-692942147,430016055,-297744421,934660935,118861935,-316079523,-968604287,977461097,818303734,963328964,297607325,52988975,67236890,-13337967,463881613,296787565,561449743,320752892,109468915,21083761,-735751010,368119464,532074886,580303742,827498227,913992605,-483885269,-78160890,-956362847,-880266071,898619463,937957610,-13166382,368773595,426066046,-405720644,971400603,208317452,504001841,164223192,299810609,-300421968,719023774,-556577681,252994349,-420493331,569438491,128979715,587020904,-815036463,-486287757,-766156182,-600624014,671491876,-686779273,380623166,-533471200,418036360,886382835,-778407291,719449656,-283633560,-207815843,958190489,-40696918,853168243,632544442,-954077982,759758791,-208520824,-322446468,-4394098,-112405200,770332416,-23973991,-511726747,-694386957,-759323972,-353712761,951245849,194171519,-828952141,-965836416,-530636836,-144126449,-61270871,-788222501,-841143716,911159983,-302747404,847338189,-54638936,597754005,102338684,33315168,955744216,600903223,-148223903,-843724526,-563291690,643255493,-318141420,390334845,-670101940,123006126,-140408213,-72535999,725845297,136925538,-185304287,439340015,-438731163,540815410,527601758,463370435,-223476129,128241442,-261886792,847172724,-658415722,711895434,-559873315,783011699,444963034,968005404,354057347,-787851335,-326807727,-894531710,741889831,-399319726,-382734285,-587676157,-898008626,-477444975,249150274,-480236260,844585314,-879850194,-830351261,-971657722,-702520743,-678103675,-879852425,-254418193,-506919263,202354164,-965350697,360638775,-268793592,884757696,280885763,77054461,-612093688,-664959323,-65362276,87618469,831048108,-340733094,-815288075,460298737,-472374854,-237009669,876976686,502401713,-612753664,579166757,-496556535,759217638,251295729,167683094,168977247,-912604844,-807171409,402592553,896093004,-522995051,-775943069,-572041558,-854905620,255732243,23850959,105745493,221260618,-537326362,212019212,-391064725,-96847541,777172437,-389038676,-397035447,-140220894,-340041549,328438275,996458077,-899392336,227014452,323418689,334930721,117334203,4039946,-754943795,-945140209,241988828,-12905230,-754753613,273344241,-59784189,-745301487,-712410877,-585996301,-898818979,-900691328,-1488896,59106930,-485505418,-452043147,548568221,461287422,-780100227,412428907,-857261539,-748346693,234838324,614584295,-882109076,-701712606,-276593670,-100694004,318065703,-477782891,-125570911,-550207947,-981914273,-791227712,509541400,738208940,-978537537,-405051620,-820914887,208717605,250602639,431968803,652408438,101153560,816296112,849304197,585820084,-964846796,601777895,-169565119,912274134,-201468981,-700833618,-711057482,875823785,-773284964,-781204189,-131699033,922244089,138291768,-364058382,492304267,-46059757,-371377147,783448810,-203207373,235239385,400902404,-399903571,-657063420,89899671,648125530,632581018,-369065810,38866173,-477986259,741698525,-831005455,-306244787,-563718088,-925544252,934988767,574616113,-737518008,-138798829,63130952,-589624693,791265247,352632101,190297706,515257504,-220331164,183191648,461999456,166051330,871665369,-715820528,-426507653,-10484561,-166316326,673801548,177299354,509927412,-560677095,251328478,907620764,-829316678,-844556504,-257923715,984574626,529447354,19904085,-599020970,293899332,672539596,-629707249,-928992636,951402451,-908082282,90851791,148954917,62161571,591254512,654365732,469932946,-533867759,-626900302,211489862,813177939,-36755791,606517660,-191411062,-307904844,990599483,-961561785,-820388866,-718823346,296775070,-748679722,-432555091,-637103836,-908838894,-554719046,-220688104,-903951236,922404239,125906830,794601999,-415310650,-575988411,-25256003,580356358,-620684569,-939305214,-583594656,501099412,-221940940,423765592,-991855592,-199965951,-583700616,135806398,896893924,50635263,-400897154,-103132600,579961987,528692945,-406827061,75203255,886220519,477998690,-355539373,673453011,908192412,652529619,-29131203,717990002,-579720557,-929780840,-366707948,-833809761,-840470290,116020977,-271711765,-673116228,366308334,199014836,385862054,-274972418,-385876047,-722338304,-72192922,-666898198,998091036,228490353,568693198,-619359421,-445869900,957580504,818205025,151259445,905995729,604386776,330829814,-513208442,393584672,579403501,-369126847,375045028,-558885199,-224697943,964397625,-557380384,-440721897,-870044093,848180281,-863481254,435520034,-366682594,836023006,768179940,-564554272,-541355582,434822066,100154297,-148579119,14467745,-223519257,-769550324,634952792,-209598147,-583996734,-393423303,448268249,-46542963,-737238987,-904132779,197537936,438747813,376152453,98133858,173934429,291910973,586209558,463995027,-979629621,-446712665,991852726,-50563282,757398093,-623173963,575392810,-474329087,147304889,85262565,794670580,-866772307,-750898406,-699515117,-484346976,-677190648,-408344534,527991165,118209543,861580926,531709363,-564084835,-507617448,-546468251,-332749115,-233990796,418405859,-771995821,933676513,-20880145,-792254613,451789021,413853492,439486922,909103069,309969342,-774520270,660535384,-442548868,-109727562,904427723,-255978050,599268022,-226373286,971091121,334034203,634154329,816171594,-921734722,-798871747,510850415,818053546,590021799,-919659305,-981869547,-230508243,-457249032,474342234,-467699417,844840454,-55323226,-279864153,760785745,-695651721,437319921,87944813,-970353358,264890041,817866923,-582168888,294334937,-405595368,-857686727,692238007,-460376577,-16763445,58817393,40470481,-856612736,-719208782,-133086172,-103741561,314612520,-727692412,-345276103,-326307515,96191542,6964913,-30297156,-941957305,896954989,209511118,-939261485,450765639,975586600,785846304,-738401591,-145746361,514074934,-333610338,-991939938,720536485,393333294,950297973,338839954,-166438599,557610497,-809362324,451290681,932559441,548311288,-153391262,428144217,-778260587,-644519131,-127092475,-363735903,-584070779,479253900,379109371,-308400402,630755227,-48286130,174539131,628863668,935116475,-677992616,66794597,-851891936,-376545059,-620126041,-94286694,358351474,-55404023,348339629,625124352,785237977,470768446,288750602,119866862,652418370,-322327747,-227349344,-747605179,59594999,949155842,58740692,-488274699,-966546648,939412123,484834586,127517463,287044703,679895104,260527956,22342817,705589623,-309951016,787615593,-729939390,-536379001,-850094513,998302429,-640240568,259638544,842102156,-146481516,849643281,929250333,-882517791,-352427980,472096099,-17806307,680940664,-936528930,666151028,156961162,865532791,636171077,-1480002,619715285,679723702,-140119303,724869630,-507948286,-142570970,-688986727,-696571544,-296428293,468878831,-737063959,-258914980,-797484474,224990085,-187988340,569710529,-676750507,-793606705,10376767,-550260678,-630951380,-442303445,456602297,-639584814,101747234,697337526,58777900,563744030,783700050,984973703,686378271,-326246664,830801458,983562280,-104441254,-642847094,385135830,-311785697,-290001385,126057189,855554065,901923329,790958160,732272691,-43343227,375097448,422483863,590141249,-986218986,988800661,-20280272,-411173314,-979560294,-426623720,-138078573,924825797,882402822,-173156028,-368644290,911659891,327554549,652558215,-489686255,250707919,-610961130,-905238914,383262298,160205307,491144739,-925072797,-247513091,-231202335,-25988810,-320121844,-713950811,473346306,931683580,875785709,-105982799,472556721,-948142605,-410171603,-233465139,-682336700,-848443810,28390746,-823637253,-843980321,-760616153,-657073724,-531621291,-976303777,264992940,-795612417,-713600202,-200629686,-732819410,799036324,665916107,56905146,154171492,27453334,310570008,383297811,729395767,535435764,965546622,-984330768,-526787122,69553476,-24221432,731487921,790169268,636696867,-866593738,737989001,948615430,-321791478,-21420735,-80082847,348802428,420759578,182405590,-419524437,222955246,-707673992,464884461,-709929748,-929929165,456140716,-386864998,-559726383,722111083,-681320084,504499029,163002812,-227026533,221868716,347016827,14644861,-900643813,-763556982,-312208186,537334359,640801860,-300860147,185550476,352652995,284413991,-691342981,-634892695,-901298656,-639283347,345568341,-20135644,205429444,-311622219,658466580,-933828986,-154846783,-179279974,765197959,-192206259,880750984};
        int[] nums2 = {1, 2, 3, 0};

//        System.out.println(t.maximumJumps(nums1, 1));
//        System.out.println(t.maximumJumps(nums2, 1));
//        System.out.println(t.maximumJumps(nums, 2));
//        System.out.println(t.maximumJumps(nums, 3));
//        System.out.println(t.maximumJumps(nums, 0));
        System.out.println(t.maximumJumps(nums1, 183014469));
    }

    public int theMaximumAchievableX(int num, int t) {
        return num + 2 * t;
    }

    /**
     * 考虑从n-1出发，往回跳到0的位置
     * 记忆化搜索，dfs[i] = max(dfs[j]) + 1，其中 0 <= j < i
     * 为避免重复计算，把dfs[j] 的结果缓存起来
     */
    public int maximumJumps(int[] nums, int target) {
        int n = nums.length;
        int[] jump = new int[n];
        Arrays.fill(jump, -1);
        // 递归基：当pos=0时，无需跳跃即可到达，返回0
        jump[0] = 0;
        dfs(nums, jump, target, n - 1);
        return jump[n - 1] < 0 ? -1 : jump[n - 1];
    }

    private int dfs(int[] nums, int[] jump, int target, int pos) {
        if (jump[pos] != -1) {
            return jump[pos];
        }
        int ans = Integer.MIN_VALUE;
        for (int j = pos - 1; j >= 0; j--) {
            int cur;
            if (nums[pos] - nums[j] >= -target && nums[pos] - nums[j] <= target) {
                cur = dfs(nums, jump, target, j) + 1;
                ans = Math.max(ans, cur);
            }
        }
        jump[pos] = ans;
        return ans;
    }
}
